# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = py-orca
description = Python package for connecting services and building data pipelines
author = Bruno Grande
author_email = bruno.grande@sagebase.org
license = Apache-2.0
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/Sage-Bionetworks-Workflows/py-orca
project_urls =
    Source = https://github.com/Sage-Bionetworks-Workflows/py-orca
    Tracker = https://github.com/Sage-Bionetworks-Workflows/py-orca/issues
    # Documentation = https://github.com/Sage-Bionetworks-Workflows/py-orca
    # Changelog = https://pyscaffold.org/en/latest/changelog.html
    # Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
    # Download = https://pypi.org/project/PyScaffold/#files

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Framework :: Apache Airflow
    Framework :: Apache Airflow :: Provider


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.10, <3.12

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.

# Updates here should be reflected in `docs/requirements.txt`
# Also, run `tox -e pipenv` to update your virtual environment
install_requires =
    apache-airflow==2.7.2
    pydantic~=1.10
    sqlalchemy<2.0  # To address SQLAlchemy warning (https://sqlalche.me/e/b8d9)
    typing-extensions~=4.5

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install orca[PDF]` like:
# PDF = ReportLab; RXP

# Additional dependencies for specific services
all =
    synapseclient~=2.7
    fs-synapse~=1.0
    sevenbridges-python~=2.9
    requests~=2.28
    urllib3<2.0

# Dependencies for testing (used by tox and Pipenv)
testing =
    setuptools~=65.0
    pytest~=7.0
    pytest-cov~=4.0
    pytest-mock~=3.0
    pytest-dotenv~=0.5.2
    pytest-asyncio~=0.21.0

# Dependencies for development (used by Pipenv)
dev =
    pre-commit~=2.0
    sphinx-rtd-theme~=1.0
    black~=22.0
    flake8~=5.0
    isort~=5.0
    mypy~=1.0
    flake8-pyproject~=1.0
    sphinx-autodoc-typehints~=1.21
    interrogate~=1.5
    jupyterlab~=3.6
    vulture~=2.7
    autopep8~=2.0
    typing-extensions~=4.5
    metaflow~=2.9
    s3fs~=2023.5

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = orca.module:function
# For example:
# console_scripts =
#     fibonacci = orca.skeleton:run
# And any other entry points, for example:
; console_scripts =
;     orca = orca.main:app
# Based on this example:
# https://github.com/astronomer/airflow-provider-sample/
apache_airflow_provider =
    provider_info = orca.airflow:get_provider_info

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov "orca" --cov-report "term-missing" --cov-report "xml"
    --verbose
norecursedirs =
    dist
    build
    .tox
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
testpaths =
    tests
    demos
# Use pytest markers to select/deselect specific tests
markers =
    slow: mark tests as slow (deselect with '-m "not slow"')
    integration: mark tests that interact with external services
    acceptance: mark end-to-end acceptance tests
    cost: mark tests that have costs associated with them

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
per-file-ignores =
    */__init__.py:F401

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.3
package = orca
extensions =
    github_actions
    markdown
    pre_commit

[autoflake]
in-place=true
remove-all-unused-imports=true
remove-unused-variables=true
ignore-init-module-imports=true
